name: Build and Release APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK for Android
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Set up Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Make gradlew executable
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Build the APK with test key
      - name: Build Release APK
        run: ./gradlew assembleRelease
        env:
          # Default test key configuration
          SIGNING_KEY_ALIAS: androiddebugkey
          SIGNING_KEY_PASSWORD: android
          SIGNING_STORE_PASSWORD: android

      # Create a release and upload APK
      - name: Create Release and Upload APK
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          files: app/build/outputs/apk/release/app-release.apk
          tag_name: v${{ github.run_number }}
          name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload APK as artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk
          retention-days: 7
